@using Common.Exceptions
@using Domain.ProfileSettings
@using WebApp.Controllers
@using WebApp.Extensions
@using WebApp.Views.Shared.CommonButtons
@model NotificationsViewModel

@{
    var isReadonly = (bool) ViewData[ProfileSettingsController.Mode];
    var formContainerId = Guid.NewGuid().ToString();

    var checkboxHtmlAttributes = new object();
    var checkboxReadonlyClass = "";

    if (isReadonly)
    {
        checkboxHtmlAttributes = checkboxHtmlAttributes.Merge(new {disabled = "disabled", @readonly = "readonly"});
        checkboxReadonlyClass = "m-checkbox--disabled";
    }

    object controlHtmlAttributes = new {@class = "form-control m-input"};

    if (isReadonly)
    {
        controlHtmlAttributes = controlHtmlAttributes.Merge(new {disabled = "disabled", @readonly = "readonly"});
    }
}

<div id="@formContainerId">
    <form class="m-form m-form--fit m-form--label-align-right"
          data-ajax="true"
          data-ajax-method="Post"
          data-ajax-mode="replace"
          data-ajax-update="#@formContainerId"
          asp-area=""
          asp-action="@nameof(ProfileSettingsController.NotificationsSettings)"
          asp-controller="@nameof(ProfileSettingsController).ToControllerName()">

        @Html.HiddenFor(x => x.UserId)
        @Html.AntiForgeryToken()
        
        <div class="m-form__section m-form__section--first">
            @for (int i = 0; i < Model.Notifications.Count; i++)
            {
                @Html.HiddenFor(x => Model.Notifications[i].Id)

                <div class="form-group m-form__group">
                    <h3>
                        <small class="text-muted">Notification of inbox </small>
                        @Model.Notifications[i].FirmName
                    </h3>
                </div>
                <div class="col-md-6">
                    <div class="form-group m-form__group">
                        <label class="m-checkbox @checkboxReadonlyClass">
                            @Html.EditorFor(x => Model.Notifications[i].SendNotificationsToEmail, new {htmlAttributes = checkboxHtmlAttributes})
                            @Html.LabelFor(x => Model.Notifications[0].SendNotificationsToEmail)
                            <span></span>
                        </label>
                    </div>
                    <div class="form-group m-form__group">
                        @Html.LabelFor(x => x.Notifications[0].NotificationEmail)
                        @Html.EditorFor(x => Model.Notifications[i].NotificationEmail, new {htmlAttributes = controlHtmlAttributes})
                    </div>
                </div>
            }

            @*<div class="m-section">
                <div class="m-section__content">
                    <div class="m-demo" data-code-preview="true" data-code-html="true" data-code-js="false">
                        <div class="m-demo__preview">
                            <div class="m-stack m-stack--hor m-stack--general m-stack--demo" style="height: 400px">
                                <div class="m-stack__item">
                                    <div class="m-stack__demo-item">Item 1</div>
                                    <div>some text</div>
                                </div>
                                <div class="m-stack__item">
                                    <div class="m-stack__demo-item">Item 2</div>
                                </div>
                                <div class="m-stack__item">
                                    <div class="m-stack__demo-item">Item 3</div>
                                </div>
                                <div class="m-stack__item">
                                    <div class="m-stack__demo-item">Item 4</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>*@

            <div style="font-size: 13px">
                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                @Html.ValidationSummary(false, "", new {@class = "text-danger"})
            </div>

            <hr/>
            @if (!isReadonly)
            {
                <button type="submit" style="margin-top: 30px" class="@CrudButtonsSettings.SaveStyle">Save</button>
            }
        </div>
        @await Html.PartialAsync("_FormScripts")
    </form>
</div>