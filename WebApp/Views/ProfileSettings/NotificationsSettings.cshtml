@using Common.Exceptions
@using Domain.ProfileSettings
@using WebApp.Controllers
@using WebApp.Extensions
@using WebApp.Views.Shared.CommonButtons
@model NotificationsViewModel

@{
    var isReadonly = (bool) ViewData[ProfileSettingsController.Mode];
    var formContainerId = Guid.NewGuid().ToString();

    var htmlAttributes = new object();
    var readonlyClass = "";
    
    if (isReadonly)
    {
        htmlAttributes = htmlAttributes.Merge(new { disabled = "disabled", @readonly = "readonly" });
        readonlyClass = "m-checkbox--disabled";
    }
}

<div id="@formContainerId">
    <form class="m-form m-form--fit m-form--label-align-right"
          data-ajax="true"
          data-ajax-method="Post"
          data-ajax-mode="replace"
          data-ajax-update="#@formContainerId"
          asp-area=""
          asp-action="@nameof(ProfileSettingsController.NotificationsSettings)"
          asp-controller="@nameof(ProfileSettingsController).ToControllerName()">
        
        @Html.HiddenFor(x => x.UserId)
        @Html.AntiForgeryToken()

        <div class="">
            <div class="m-form__section m-form__section--first">
                @for (int i = 0; i < Model.Notifications.Count; i++)
                {
                    <div class="col-md-6">
                        <div class="form-group m-form__group">
                            @Html.EditorFor(x => Model.Notifications[i].FirmName, new { htmlAttributes = htmlAttributes })
                        </div>
                        <div class="form-group m-form__group">
                            @Html.EditorFor(x => Model.Notifications[i].SendNotificationsToEmail, new { htmlAttributes = htmlAttributes })
                        </div>
                        <div class="form-group m-form__group">
                            <label class="m-checkbox @readonlyClass">
                                @Html.EditorFor(x => Model.Notifications[i].SendNotificationsToEmail, new { htmlAttributes = htmlAttributes })
                                Label
                                <span></span>
                            </label>
                        </div>
                    </div>
                }
            </div>

            <div style="font-size: 13px">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            </div>

            <hr/>
            @if (!isReadonly)
            {
                <button type="submit" style="margin-top: 30px" class="@CrudButtonsSettings.SaveStyle">Save</button>
            }
        </div>
        @await Html.PartialAsync("_FormScripts")
    </form>
</div>

