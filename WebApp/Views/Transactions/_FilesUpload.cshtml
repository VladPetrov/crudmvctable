@using WebApp.Controllers
@using WebApp.Model.Transactions
@model TransactionUploadFilesViewModel

@{
    Layout = null;
}

<form id="filesForm" method="post" enctype="multipart/form-data" asp-controller="Transactions" asp-action="AddFile">
    @Html.HiddenFor(x => x.TransactionId)
    <div class="fileinput fileinput-new input-group" data-provides="fileinput">
        <div class="form-control" data-trigger="fileinput">
            <i class="glyphicon glyphicon-file fileinput-exists"></i>
            <span class="fileinput-filename"></span>
        </div>
        <span class="input-group-addon btn btn-default btn-file">
            <span class="fileinput-new">Select file</span><span class="fileinput-exists">Change</span>
            <input type="file" name="files">
        </span>
        <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">Remove</a>
        <a href="#" class="input-group-addon btn btn-primary fileinput-exists" onclick="$('#filesForm').submit()">Upload</a>
    </div>
</form>

<script>
    const $form = $('#filesForm');

    $form.on("submit",
        function(e)
        {
            e.preventDefault();

            const formData = new FormData($form[0]);
            console.log(formData);

            $.ajax({
                url: this.action,
                type: this.method,
                data: formData,
                cache: false,
                contentType: false,
                processData: false,
                success: function(data)
                {
                    $.get('@Url.Action(nameof(TransactionsController.GetFiles), new {id = Model.TransactionId})',
                        response =>
                        {
                            $("#@TransactionFilesViewModel.ContainerId").html(response);
                        });
                },
                error: function(xhr, error, status)
                {
                    console.log(error, status);
                }
            });
        });
</script>